[CONTROL]
# either regression, or classification
# When setting to classification, examples will be organized by 
# valence/arousal quartiles and the corresponding mood will be be the prediction target.
experiment_type = classification
valence_key = existing_valence
arousal_key = existing_arousal


[PREPROCESSING]
threshold = 50
test_size = 0.3
# case sensitive
meta_cols = Song_ID, n_words, comment_length_stdev, n_words_uniq, n_comments, comment_length_mean


[FEATURE_SELECTION] 
selector = none
# n_components is the parameter passed to the PCA constructor. 
# This value represents total number of components if 1 <= n < inf
# If 0 < n < 1, then n_components represents the percent of explained variance 
# the PCA will preserve, and find the minimum number of components which fit that criteria. 
n_components = 0.95
# percent_features is only used with selection strategies which aren't PCA.
percent_features = 0.10

[MODEL]
model = RandomForestClassifier

# Only use when experiment_type = classification
[SAMPLER]
# Valid samplers include under_sample and SMOTE.
sampling = none


# This section should be specific to the type of model you chose above.
[MODEL_ARGS]

# This section is only used if grid_search = True
# Every parameter should either be in the form of a comma separated list, or 
# param_low, param_high, param_step. 
[GS_PARAMS]
grid_search = True
cv = 5
# See - https://scikit-learn.org/stable/modules/model_evaluation.html#scoring-parameter 
scoring = f1_weighted

# This section should be specific to the type of model you chose above.
[PARAM_GRID]
# Format is type, [value, value, value]
Model__n_estimators = int, 100, 150, 200



